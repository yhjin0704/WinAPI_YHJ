벡터 기초
벡터란 차원을 행렬로 만든것 1x4 행렬
보통 3차원 수학에서는 4차원으로 만들어서 w값까지 생각해서 만든다.

우리는 애초에 4차원으로 배웠는데 보통 게임업계에서는 3차원 벡터로 사용하거나 개념을 설명한다.
4차원으로 배웠던 이유는 w값에 대해 잊지 말라고 그런 것

벡터는 기본적으로 x차원 좌표계 그래프에서 방향과 크기를 가진 화살표이다.
벡터는 기본적으로 0,0에서 시작

벡터는 연산자만으로도 의미를 가진다
함수에서 리턴될때 값이 스칼라일 경우 float, 즉, 크기
벡터의 덧셈 => 결과값 벡터, 무언가를 이동 시킬때 보통 사용

벡터의 뺄셈 => 결과값 벡터, x오브젝트가 y오브젝트를 향하는 방향벡터 등을 구할 때 사용

xyz * xyz => 벡터곱
xyz * s => 스칼라곱

벡터의 스칼라 곱셈 => 결과값 벡터, 보통 속력 증가(기하학적으로 위치 증가, 방향은 유지하며 크기만 변경)

벡터의 정규화 => 결과값 벡터, 굉장히 많은 상황에서 사용
정규화(노말라이즈)하는 방법은 피타고라스의 정리와 연계됨
A^2 + B^2 = C^2

외적
A, B 벡터와 수직인 C벡터를 구한다.
뷰 행렬이나 회전 행렬을 만들 때 보통 사용한다.


인코딩
컴퓨터에서 문자열을 표현하는 방법 => 근본적으로 보면 모든 문자는 숫자, 모든 문자는 정수로 표현할 수 있다. 그래서 문자와 숫자를 매칭시켜서 표현한다.
1바이트 => 256글자 표현가능 => 아스키
아스키로는 표현가능한 숫자가 적어서 1~2바이트로 매칭 => 안시 or 멀티바이트
그래도 모든 언어를 다 넣을 수는 없다 => 국가코드
1~2말고 2바이트로 그냥 다 쓰자 => 유니코드 or 와이드 바이트

일반적인 텍스트 저장방식 => 유니코드 or 멀티바이트를 사용


















